#!/bin/bash
#============================================================================
# Title       : diskheader
# Description : Shows hexdump of the first 1k block of a disk
# Author      : Bart Sjerps <bart@outrun.nl>
# Version     : 1.0
# Manual      : asmdisks
# License     : GPLv3+
# ---------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.
# ---------------------------------------------------------------------------
# Revision history:
# 2017-02-01 : First version
#============================================================================
# Configuration parameters:
# ---------------------------------------------------------------------------
#============================================================================
# Initialization - Logging - Etc.
# ---------------------------------------------------------------------------
die() { echo "$(basename $0): [die] $@" >&2 ; exit 10 ; }

test -x /usr/bin/xxd || die "Requires xxd (vim-common)"

#============================================================================
# Usage:
# ---------------------------------------------------------------------------
usage() {
  cat <<- EOF
	Usage: $(basename $0) [-c blocks] [-w width] <disk>
	
	Shows a hexdump of the header of the given disk.
	
	Options:
	 -c blocks   show <blocks> (default 1 block of 1024 bytes)
	 -w width    Hexdump with <width> (default 32)
	
	EOF
}

version() {
  local version=$(awk -F: '/^# Version / {sub(/ /,"",$NF) ; print $NF}' $0)
  local author=$(awk -F: '/^# Author / {sub(/ /,"",$NF) ; print $NF}' $0)
  local license=$(awk -F: '/^# License / {sub(/ /,"",$NF) ; print $NF}' $0)
  case $license in
    GPLv3+) local ltext="License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>." ;;
    *)      local ltext="license $license (unknown)"
  esac
  cat <<- EOF
	$(basename $0) ${version:-0.0}
	Written by ${author:-<No Author>}, ${ltext}
	@br
	If you have suggestions for improvements in this tool, please send them along via the above address.
	
	Copyright (c) 2018 ${author% <*}
	EOF
  echo @br
  echo This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
}

mandump() {
  test -x /usr/bin/help2man || exit 10
  local desc=$(awk -F: '/^# Description/ {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local sect=$(awk -F: '/^# Section/     {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local manual=$(awk -F: '/^# Manual/    {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local source=$(awk -F: '/^# Source/    {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  SOURCE_DATE_EPOCH=$(stat -c %Y $0); export SOURCE_DATE_EPOCH
  help2man -N -n "$desc" -s "${sect:-1}" -S "${source:-Outrun}" -m "${manual:-Outrun manual}" $0 | sed "s/^@/\./"
}

case $1 in
  -\?)       man $(basename $0) ; exit;;
  --help)    usage   ; exit ;;
  --version) version ; exit ;;
  --mandump) mandump ; exit ;;
esac

#============================================================================
# Functions
# ---------------------------------------------------------------------------


#============================================================================
# Main section - parsing options etc
# ---------------------------------------------------------------------------
while getopts ":hb:c:w:" OPT; do
  case "$OPT" in
      b) blksz=${OPTARG} ;;
      c) count=${OPTARG} ;;
      w) width=${OPTARG} ;;
  esac
done
shift $(expr $OPTIND - 1)

test -z "$1" && usage && exit
test -b "$1" || die "$1 is not a block device"

dd if="$1" bs=${blksz:-1024} count=${count:-1} status=none | xxd -c ${width:-32}
