#!/bin/bash
#============================================================================
# Title       : asmstat
# Description : Wrapper for iostat that maps ASM devices
# Author      : Bart Sjerps <bart@outrun.nl>
# Version     : 1
# Manual      : asmdisks
# License     : GPLv3+
# ---------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.
# ---------------------------------------------------------------------------
# Revision history:
# 2016-10-20 : Minor update
# 2015-03-08 : Fixed alignment
# 2014-10-24 : Updated template
# 2014-05-02 : Created
# ---------------------------------------------------------------------------
# Additional info:
# Man page:          : Yes
# Bash completion    : No
#============================================================================
# Configuration parameters:
# ---------------------------------------------------------------------------

#============================================================================
# Initialization - Logging - Etc.
# ---------------------------------------------------------------------------
# Filter device-mapper and non-disk devices
sedstring="/dm-/d;/scd/d;"
#============================================================================
# Usage:
# ---------------------------------------------------------------------------
usage() {
  cat <<- EOF
	Usage: $(basename $0) [ options ]
	
	A wrapper for iostat that translates /dev/sdXX devices into their
	ASM device names.  Any options will be directly passed on to iostat.
	
	It  uses  sed(1) to filter mapper devices and replace /dev/sdX devices
	with /dev/oracleasm/volX so it shows more meaningful output than
	plain iostat when using with asm(1)

	Options:
	The options are passed straight to iostat(1) and therefore 100% equal.
	
	*Example*
	asmstat -xm 2
	
	shows IO performance statistics for ASM and generic disk devices every two seconds.
	
	*Files*
	/dev/oracleasm
	
	*See also*
	iostat(1), asm(1)
	
	EOF
}
version() {
  local version=$(awk -F: '/^# Version / {sub(/ /,"",$NF) ; print $NF}' $0)
  local author=$(awk -F: '/^# Author / {sub(/ /,"",$NF) ; print $NF}' $0)
  local license=$(awk -F: '/^# License / {sub(/ /,"",$NF) ; print $NF}' $0)
  case $license in
    GPLv3+) local ltext="License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>." ;;
    *)      local ltext="license $license (unknown)"
  esac
  cat <<- EOF
	$(basename $0) ${version:-0.0}
	Written by ${author:-<No Author>}, ${ltext}
	@br
	If you have suggestions for improvements in this tool, please send them along via the above address.
	
	Copyright (c) 2018 ${author% <*}
	EOF
  echo @br
  echo This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
}

mandump() {
  test -x /usr/bin/help2man || exit 10
  local desc=$(awk -F: '/^# Description/ {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local sect=$(awk -F: '/^# Section/     {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local manual=$(awk -F: '/^# Manual/    {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  local source=$(awk -F: '/^# Source/    {sub(/ /,"",$NF) ; print $NF; exit}' $0)
  SOURCE_DATE_EPOCH=$(stat -c %Y $0); export SOURCE_DATE_EPOCH
  help2man -N -n "$desc" -s "${sect:-1}" -S "${source:-Outrun}" -m "${manual:-Outrun manual}" $0 | sed "s/^@/\./"
}

case $1 in
  -\?)       man $(basename $0) ; exit;;
  --help)    usage   ; exit ;;
  --version) version ; exit ;;
  --mandump) mandump ; exit ;;
esac


#============================================================================
# Main
# ---------------------------------------------------------------------------

if ! ls /dev/oracleasm/* &>/dev/null ; then
  iostat $@
else
  for asmdev in /dev/oracleasm/*
  do
    maj=$(echo "ibase=16; $(stat -Lc '%t' ${asmdev}|tr 'a-z' 'A-Z')"|bc)
    min=$(echo "ibase=16; $(stat -Lc '%T' ${asmdev}|tr 'a-z' 'A-Z')"|bc)
    # get location of dev
    # old method:
    # dev=$(egrep -l "${maj}:${min}$" /sys/devices/{*,*/*,*/*/*}/host*/{*/*,*/*/*}/block/*/dev 2>/dev/null | head -1)
    # better method (!?):
    dev=$(readlink $(find /sys/dev/block -name "${maj}:${min}" | sed -n "1p" )|sed "s/.*\///")
    [[ "$dev" == "" ]] && continue
    disk=$(echo $dev | awk -F'/' '{print $(NF-1)}')
    asmvol=${asmdev##*/}
    # get size of largest string
    len=${#disk} ; (( ${#asmvol} > len)) && len=${#asmvol}
    # align asm volume name to 6 chars
    # translate /dev/sdX into /dev/oracleasm/<vol>
    sedstring="${sedstring}$(printf "s/%-${len}s/%-${len}s/;\n" $disk $asmvol)"
  done
  # run iostat command with translation
  iostat $@ | sed -u "$sedstring"
fi

