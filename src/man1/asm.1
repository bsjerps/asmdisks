.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH ASM "1" "October 2018" "Outrun" "asmdisks"
.SH NAME
asm \- Manage disks and volumes for Oracle ASM
.SH SYNOPSIS
.B asm
[\fI\,-n\/\fR] [\fI\,-t\/\fR] \fI\,<command> \/\fR[\fI\,args\/\fR]
.SH DESCRIPTION
.B asm
is a replacement for the
.B oracleasm
command provided via Oracle ASMlib. It attempts to provide similar functionality using a simple script
and Linux UDEV rather than tweaking the kernel with an add\-on kernel module,
complex configuration and binary files.
.PP
It will create block devices from disks, partitions or mapper devices,
under /dev/oracleasm/ (default) for use with Oracle and changes permissions to
grid:asmdba to allow Oracle ASM read/write access to those disks (only).
Mapper devices can be multipath devices, LVM logical volumes, or any other
block device managed by Linux device\-mapper.
.PP
The administration of those files is done through the
.I \fI\,/etc/asmtab\/\fP
configuration file, which holds the asmdisks volume name, volume type,
and the identifier, to provide persistent naming across reboots
and reconfiguration. You may manually edit this file if so needed. The
.B UDEV
configuration in \fI\,/etc/udev/rules\/\fP.d/ is built from the definitions in asmtab.
.P
This tool is completely out\-of\-band, which means it is only used for generating
and activating the udev rules file and does nothing until an administrator runs
the tool. You may even remove asmdisks and the configuration will still keep working.
.SH OPTIONS
.TP
\fB\-n\fR
no headings
.TP
\fB\-t\fR
use TAB separator (for scripting) instead of column formatted (implies \fB\-n\fR)
.TP
rescan
lets the kernel probe for new SCSI devices (after hot\-adding disks)
.TP
createdisk <label> <block device>
adds a disk as /dev/oracleasm/<label>
.IP
If you want the disk to appear under another path (such as \fI\,/dev/iorate\/\fP) then use
the relative path as label (i.e. asm createdisk iorate/vol1 <id>)
The block device can be a raw disk (i.e. \fI\,/dev/sdX\/\fP), a previously created (empty)
disk partition (\fI\,/dev/sdX1\/\fP), or a device\-mapper block device, to be specified as
any mapper device that points to the correct \fI\,/dev/dm\-X\/\fP device,
such as LVM logical volumes (i.e. \fI\,/dev/myvg/lvol1\/\fP), multipath devices (\fI\,/dev/mapper/mpathX\/\fP)
etc. "asm" will attempt to figure out the type of device and specify the correct ID in asmtab.
.TP
deletedisk <label>
deletes the disk from /dev/<diskstring>/.
.IP
It will not be completely removed but re\-appear
as \fI\,/dev/sdX\/\fP or \fI\,/dev/dm\-X\/\fP etc. Be careful, if the disk is still in use it could
result in I/O errors and even dataloss.
.TP
renamedisk <label> <new>
renames the disk (beware if disk is in use!)
.TP
scandisks
processes any changes in asmtab, creates new UDEV rules
.IP
(run it after createdisk/deletedisk to
activate your changes). It's called automatically after createdisk/deletedisk actions.
.TP
disks
shows all SCSI disks, SCSI connections, size and path
.IP
also shows SCSI addresses (handy for figuring out which VMDK / iSCSI / etc volume is used)
.TP
multi
list multipath devices
.TP
list
show all devices currently configured under \fI\,/dev/oracleasm\/\fP
.TP
import
Imports all volumes from /dev/sd* that are labeled as ASMdisk
.IP
i.e. they have an Oracle ASM disk signature created by another host (cloning) or another node (RAC.
It simply imports volumes as vol01, vol02, etc.
as ASM does not care what the Linux device name looks like anyway.
.TP
dump
Shows the contents of \fI\,/etc/udev/rules.d/99\-asm.rules\/\fP
.SH "SCSI UUID"
The scsi identifier is retrieved via the
.B scsi_id(8)
command and depends on the OS and hardware layer to provide this.
The VMware default (all products) is to have this ID disabled. It must be re\-enabled with
.P
.B disk.EnableUUID = "TRUE"
.P
in the VM's VMX configuration file.
This tool will not work without this setting.  You may verify if that works using the command
.br
.B scsi_id \fB\-\-whitelisted\fR \fI\,/dev/sda\/\fP
.br
or running "asm" without options (it will complain if \fI\,/dev/sda\/\fP does not show a SCSI identifier).
.SH DISKSTRINGS
The default diskstring under which new volumes are placed is /dev/oracleasm/ with
ownership grid:asmdba and mode 0660.
.br
You may want to configure volumes elsewhere and with different permissions. If you specify a
relative path as volume name then the volume will be configured under /dev/<path>/name,
for example "iorate/vol1" will appear as \fI\,/dev/iorate/vol1\/\fP.
The permissions will be the default (grid:asmdba) unless an entry for the new diskstring
is defined in asmtab (needs to be done manually). At initial creation, "asm" defines
one special case (in asmtab) for iorate:
.nf
PATH=iorate:root:iops:0660
.fi
This means if you create volumes as iorate/<volname> they will have permissions root:iops @ mode 0660.
This allows the IORate tool to run under userid "iorate" having group membership "iops" with access
to those devices \- without giving the user full access to all disks (such as by making it
a member of the "disk" group). This prevents IORate to accidentally overwrite OS or ASM
devices (when using the iorate RPM package, that is). IORate will only have direct access
to volumes under \fI\,/dev/iorate\/\fP.
ASM will fall back to grid:asmdba if the specified user/group does not exist.
Another purpose for having an additional diskstring is if you want to run more
than one Oracle ASM instance \- each can have it's own diskstring and permissions.
The default grid:asmdba owner/group can be altered by setting
.br
PATH=oracleasm:user:group:mode in the asmtab file.
.SH "ASMTAB FILE FORMAT"
Define all non\-default diskstrings as
.nf
.PP
PATH=<diskstring>:<owner>:<group>:<mode>
.PP
.fi
Non\-defined diskstrings will have default ownerships/modes.
.br
For every volume to be defined, register one entry in asmtab as
.nf
.PP
<diskstring/volumename> <type> <id>
.PP
.fi
diskstring may be omitted (defaults to "oracleasm"). Type is currently either "scsi" or "mapper".
.br
id is either a scsi_identifier (such as SCSI device "36000c29f825cd85b5fcc70a1aadebf0c" or
iSCSI id "1IET_00010001") or a similar identifier appended with :<partnum>,
such as "36000c29f825cd85b5fcc70a1aadebf0c:2" indicating the 2nd partition on that
SCSI disk, or a name as it appears under /dev/mapper/ such as \fI\,/dev/mapper/myvg\-vol1\/\fP.
.br
Normally you should not have to edit asmtab manually, however in some cases it may become handy.
.SH "SUPPORTED DISK TYPES"
asmdisks currently supports the following block device types:
.P
\- Plain SCSI disk (/dev/sd*)
.br
\- Linux Multipath (/etc/multipath/*, multipath \fB\-ll\fR)
.br
\- Linux Logical Volumes (\fI\,/dev/vgname/lvname\/\fP)
.br
\- DellEMC Powerpath (/dev/power*)
.br
\- DellEMC ScaleIO (/dev/scini*)
.br
.SH "RAC AND CLUSTERWARE"
Be aware that Oracle RAC requires shared devices as ASM volumes. This means running
RAC with anything else than full SCSI disks or SCSI disk partitions will not work.
.SH "RAW SCSI DISKS OR DISK PARTITIONS"
Many administrators prefer to create a primary partition first on each disk,
then use that for ASM (this is the standard way of using disks with Oracle ASMLib).
My preference is to hand full disks (not partitioned) to ASM. By using "asm"
the risk of a rookie administrator creating filesystems or anything else on that disk
is virtually eliminated, because the disk device is removed from \fI\,/dev/sdXX\/\fP,
and reappears as \fI\,/dev/oracleasm/volXX\/\fP. An admin who would still create a filesystem on
such a device should be sent back to basic UNIX administration training.
Using full disks eliminates the need for disk alignment and some extra administration steps.
.P
Note that with Enterprise Linux 7 this feature of udev no longer works and the only option
is to add symlinks to devices in /dev/ so this is now the standard behaviour of asmdisks.
.SH "BASH COMPLETION"
If you have the package bash\-completion installed, you may use TAB to show possible
command options or auto\-complete things like disk and volume names.
.SH "USE IN SCRIPTS"
If you want to parse the output of "asm" (list/disks) for usage in scripts, you can use the "\-t"
option so that the output is TAB separated instead of column formatted.
.br
In future versions, the columns and output order may change.
.SH "BOOT DISK PROTECTION"
asmdisks attempts to detect which disk is used as bootdisk and prevent messing with this disk directly.
In some cases the detection fails. You may add the bootdisk to \fI\,/etc/asmtab\/\fP manually.
.SH "KNOWN ISSUES"
\- Modifying the UDEV config requires running "udevadm trigger" which in turn triggers network reconfiguration.
A known issue when using DHCP is that the network scripts attempt to start a 2nd dhclient \- which fails and
results in errors in the syslog. You can safely ignore these.
.br
\- Enabling or disabling Linux Multipath may require a reboot to prevent strange asmdisks behaviour.
.SH BUGS
Likely. Currently "asm" does not do a lot of validation checking so in classic UNIX style, it offers
many ways to mess up. Especially via directly editing asmtab. You have been warned.
.br
That said, asm is "out of band", in other words it is not required for correct presentation of
ASM devices. You could deinstall asmdisks, reboot and the ASM volumes would still be there (because of
the 99\-asm.rules UDEV file). In the end, "asm" only manages this file and you may verify at any time
if the contents are correct or make backup copies of the file at any time.
.br
Note that to avoid potential problems with boot devices, \fI\,/dev/sda\/\fP is excluded from
any manipulation (I learned the hard way ;)
.br
So even if you mess up, you should be able to boot and fix problems by removing/restoring
99\-asm.rules followed by "udevadm trigger" to reset udev.
Then fix issues in asmtab and retry "asm scandisks".
.P
EMC Powerpath has not yet been fully tested with asm, but this would
only be required for physically deployed hosts. Likewise for non\-standard SCSI devices such as
paravirtualized devices, or any other disk type that shows up different from what is expected.
.br
Roughly speaking, any device that shows up as \fI\,/dev/sdXX\/\fP in Linux (i.e. it is an "sd" device type) should work.
If you want support for another non\-standard device type, let me know and I will see if it's possible to add support.
.SH FILES
\fI\,/etc/asmtab\/\fP
.br
/dev/oracleasm/
.br
/dev/iorate/
.br
\fI\,/etc/udev/rules.d/99\-asm.rules\/\fP
.br
\fI\,/etc/scsi_id.config\/\fP
.SH AUTHOR
Written by Bart Sjerps <bart@outrun.nl>, License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
If you have suggestions for improvements in this tool, please send them along via the above address.
.SH COPYRIGHT
Copyright \(co 2018 Bart Sjerps
.br
.br
This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
wipedisk(1), asmstat(1), udev(7), udevadm(8), scsi_id(8)
