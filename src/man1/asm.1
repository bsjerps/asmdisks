.TH ASM "1" "December 2023" "Dirty Cache" "asmdisks"
.SH NAME
asm \- Manage disks and volumes for Oracle ASM
.SH SYNOPSIS
.B asm
[\fI\,-n\/\fR] [\fI\,-t\/\fR] \fI\,<command> \/\fR[\fI\,args\/\fR]
.SH DESCRIPTION
.B asm
is a replacement for the
.B oracleasm
command provided via Oracle ASMlib. It attempts to provide similar functionality using a simple python script
and Linux UDEV rather than tweaking the kernel with an add\-on kernel module,
complex configuration and binary files.
.PP
It will create block devices from disks, partitions or mapper devices,
under /dev/oracleasm/ (default) for use with Oracle and changes permissions to
grid:asmdba to allow Oracle ASM read/write access to those disks (only).
Mapper devices can be multipath devices, LVM logical volumes, or any other
block device managed by Linux device\-mapper.
.PP
The administration of those files is done through the
.I /etc/asmtab.db
sqlite3 database file, which holds the asmdisks volume name, volume type,
and the identifier, to provide persistent naming across reboots
and reconfiguration. You may manually edit this file if so needed, using sqlite3(1). The
.B UDEV
configuration in
.I /etc/udev/rules.d/
is built from the definitions in asmtab.
.P
This tool is completely out\-of\-band, which means it is only used for generating
and activating the udev rules file and does nothing until an administrator runs
the tool. You may even remove asmdisks and the configuration will still keep working.
.SH OPTIONS
.TP
\fB\-V\fR
Show version information
.TP
-h
Show help.
Can also be added after each subcommand, i.e. \fBasm configure -h\fR
.TP
\fB\-n\fR
no headings (use with -t)
.TP
\fB\-t\fR
use TAB separator (for scripting) instead of column formatted (implies \fB\-n\fR)
.TP
rescan
lets the kernel probe for new SCSI devices (after hot\-adding disks)
.TP
list
Lists the volumes defined in the database
.TP
disks
Lists the available disks on the system and their symbolic link (if available)
.TP
createdisk <label> <block device>
adds a disk as /dev/oracleasm/<label>
.IP
If you want the disk to appear under another path (such as \fI\,/dev/iorate\/\fP) then use
the relative path as label (i.e. asm createdisk iorate/vol1 <id>)
The block device can be a raw disk (i.e. \fI\,/dev/sdX\/\fP), a previously created (empty)
disk partition (\fI\,/dev/sdX1\/\fP), or a device\-mapper block device, to be specified as
any mapper device that points to the correct \fI\,/dev/dm\-X\/\fP device,
such as LVM logical volumes (i.e. \fI\,/dev/myvg/lvol1\/\fP), multipath devices (\fI\,/dev/mapper/mpathX\/\fP)
etc. "asm" will attempt to figure out the type of device and specify the correct ID in asmtab.db.
.IP
Will fail if the disk is not empty or not a (previously used) ASM disk.
.TP
deletedisk <label>
deletes the disk from /dev/<diskstring>/.
.IP
The permissions on the underlying /dev/xxx device will be reset to the defaults.
Be careful, if the disk is still in use it could
result in I/O errors and even dataloss.
.TP
renamedisk <label> <new>
renames the disk (beware if disk is in use!)
.IP
Requires the --force flag as an extra safety.
.TP
export
Exports the database to a JSON file (/tmp/asmdisks.json)

This allows the data to be imported on another host (useful with Oracle RAC) or backed up.
.TP
import
Imports the database from a JSON file (/tmp/asmdisks.json)
.TP
importrules <udev rules file>
Imports the database from a pre-existing UDEV rules file (such as /etc/udev/rules.d/99-asm.rules)
The file must have been previously generated with asmdisks to be parsed.
.TP
importasm
Creates a volume for each previously used ASM disk. Volumes will be named vol01, vol02, and so on.
.TP
rebuild
processes any changes in the database and creates a new UDEV rules file, and activates it
.IP
It's called automatically after createdisk/deletedisk/renamedisk actions.
.TP
dump
Shows the contents of the UDEV rules file \fI\,/etc/udev/rules.d/98\-asm.rules\/\fP
.TP
setup
Creates the SQLite database and loads the schema (needed before using the tool)
.TP
configure
Configures overall settings (asm diskstring, and user/group/mode of generated disks). See \fBconfigure -h\fR for more details.
.TP
destroy
Destroys (deletes) the SQLite database. Run setup before asmdisks can be used again. Requires the \fB--force\fR flag.
.SH "SCSI UUID"
The scsi identifier is retrieved via the
.B scsi_id(8)
command and depends on the OS and hardware layer to provide this.
The VMware default (all products) is to have this ID disabled. It must be re\-enabled with
.P
.B disk.EnableUUID = "TRUE"
.P
in the VM's VMX configuration file.
This tool will not work without this setting.  You may verify if that works using the command
.br
.B /usr/lib/udev/scsi_id \fB\-\-whitelisted\fR \fI\,/dev/sda\/\fP
.br
or running "asm" without options (it will complain if \fI\,/dev/sda\/\fP does not show a SCSI identifier).
.SH DISKSTRINGS
The default diskstring under which new volumes are placed is /dev/oracleasm/ with
ownership grid:asmdba and mode 0660.
.br
You may want to configure volumes elsewhere and with different permissions. If you specify a
relative path as volume name then the volume will be configured under /dev/<path>/name,
for example "iorate/vol1" will appear as \fI\,/dev/iorate/vol1\/\fP.
The permissions will be the default (grid:asmdba) unless the settings are modified through the \fBconfigure\fR subcommand.
.SH "SUPPORTED DISK TYPES"
asmdisks currently supports the following block device types:
.P
\- Plain SCSI disk (/dev/sd*)
.br
\- NVME disk (/dev/nvmeXnX)
.br
\- Linux Multipath (/etc/multipath/*, multipath \fB\-ll\fR)
.br
\- Linux Logical Volumes (\fI\,/dev/vgname/lvname\/\fP)
.br
\- DellEMC Powerpath (/dev/power*)
.br
\- DellEMC ScaleIO (/dev/scini*)
.br
.SH "RAC AND CLUSTERWARE"
Be aware that Oracle RAC requires shared devices as ASM volumes. This means running
RAC with anything else than full SCSI disks or SCSI disk partitions will not work.
.SH "RAW SCSI DISKS OR DISK PARTITIONS"
Many administrators prefer to create a primary partition first on each disk,
then use that for ASM (this is the standard way of using disks with Oracle ASMLib).
My preference is to hand full disks (not partitioned) to ASM. Using full disks eliminates
the need for disk alignment and some extra administration steps.
.P
Note that with Enterprise Linux 7 this feature of udev no longer works and the only option
is to add symlinks to devices in /dev/ so this is now the standard behaviour of asmdisks.
.SH "BASH COMPLETION"
If you have the package bash\-completion installed, you may use TAB to show possible
command options or auto\-complete things like disk and volume names.
.SH "USE IN SCRIPTS"
If you want to parse the output of "asm" (list/disks) for usage in scripts, you can use the "\-t"
option so that the output is TAB separated instead of column formatted.
.br
In future versions, the columns and output order may change.
.SH "BOOT DISK PROTECTION"
asmdisks attempts to detect which disk is used as bootdisk and prevent messing with this disk directly.
.SH "KNOWN ISSUES"
\- Modifying the UDEV config requires running "udevadm trigger" which in turn triggers network reconfiguration.
A known issue when using DHCP is that the network scripts attempt to start a 2nd dhclient \- which fails and
results in errors in the syslog. You can safely ignore these.
.br
\- Enabling or disabling Linux Multipath may require a reboot to prevent strange asmdisks behaviour.
.SH BUGS
Likely. Currently "asm" does not do a lot of validation checking so in classic UNIX style, it offers
many ways to mess up. Especially via directly editing the asmtab.db database. You have been warned.
.br
That said, asmdisks is "out of band", in other words it is not required for correct presentation of
ASM devices. You could deinstall asmdisks, reboot and the ASM volumes would still be there (because of
the 98\-asm.rules UDEV file). In the end, "asm" only manages this file and you may verify at any time
if the contents are correct or make backup copies of the file at any time.
.br
Note that to avoid potential problems with boot devices, \fI\,/dev/sda\/\fP is excluded from
any manipulation (I learned the hard way ;)
.br
So even if you mess up, you should be able to boot and fix problems by removing/restoring
99\-asm.rules followed by "udevadm trigger" to reset udev.
Then fix issues in asmtab.db and retry "asm rebuild".
.P
EMC Powerpath has not yet been fully tested with asm, but this would
only be required for physically deployed hosts. Likewise for non\-standard SCSI devices such as
paravirtualized devices, or any other disk type that shows up different from what is expected.
.br
Roughly speaking, any device that shows up as \fI\,/dev/sdXX\/\fP in Linux (i.e. it is an "sd" device type) should work.
If you want support for another non\-standard device type, let me know and I will see if it's possible to add support.
.SH FILES
.I /etc/asmtab.db
.br
.I /dev/oracleasm/
.br
.I /etc/udev/rules.d/98-asm.rules
.SH AUTHOR
Written by Bart Sjerps <bart@dirty-cache.com>, License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
If you have suggestions for improvements in this tool, please send them along via the above address.
.SH COPYRIGHT
Copyright \(co 2023 Bart Sjerps
.br
.br
This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
wipedisk(1), asmstat(1), diskheader(1), udev(7), udevadm(8), lsscsi(1)
