#!/bin/bash
#============================================================================
# Title       : menu-asm
# Description : Menu frontend for ASMdisks
# Author      : Bart Sjerps <bart@outrun.nl>
# License     : GPLv3+
# ---------------------------------------------------------------------------

set -u

die()    { echo "$(basename $0): [die] $@" >&2 ; exit 10 ; }
quit()   { echo "$(basename $0): [quit] $@"    ; exit 0 ; }
msg()    { echo "$(basename $0): [msg] $@" ; }
err()    { echo "$(basename $0): [err] $@" >&2 ; }

source /usr/lib/lightmenu.bash &>/dev/null || die "lightmenu not installed"

export BACKTITLE="ASMdisks menu on $(hostname)"

#============================================================================
# Actions
# ---------------------------------------------------------------------------

view_asmdisks() {
  messagebox -fresize --margin 2 --height2 0 --hline "Use \Z1PgUP PgDOWN\Zn to scroll" \
    --title "ASM disks" "$(asm -t disks | expand -t 10,20,28)"
}

view_asmlist() {
  messagebox --margin 5 -fresize --hline "Use \Z1PgUP PgDOWN\Zn to scroll" \
    --title "ASM list" "$(asm list | expand -t 10,20,30,40)"
}

view_asmavailable() {
  messagebox --margin 5 -fresize --hline "Use \Z1PgUP PgDOWN\Zn to scroll" \
    --title "ASM candidates" "$(asm -t disks | awk '$5=="-" && $4 == "blank" {print $0}')"
}

view_asmadd() {
  local -a volname disks
  local NAME=

  for c in $(seq 1 100); do
    NAME=$(printf "vol%s" $c)  
    if [ ! -b /dev/oracleasm/$NAME ] ; then break ; fi  
  done
  append volname "Volume /dev/oracleasm/" "$NAME"

  for line in $(asm -t disks | awk '$5=="-" && ( $4=="blank" || $4=="asm" ) {print $1","$4"-"$3}'); do
    append disks "${line%%,*}" "${line#*,}" DEVICE
  done
  result=$(ldialog formlist --height2 12 --formx 24 --title "Add ASM volume" --title2 "Select device" volname disks) || return $?

  volname=$(awk -F'\t' 'NR==1 && NF==1 {print $1}' <<< "$result")
  devname=$(awk -F'\t' 'NR==2 && NF==2 {print $2}' <<< "$result")

  runcommand asm createdisk $volname $devname
}

# TBD: update lightmenu.bash first to do listform
view_asmrename() {
  local vol desc
  local -a disks
  status="Be careful when deleting ASM volumes still in use!"

  IFS=$'\n' ; for disk in $(asm -t list | asm -t list | awk -F'\t' '{print $1":"$2"-"$3"-"$4"G"}')
  do
    vol=$(echo $disk | cut -d: -f1)
    desc=$(echo $disk | cut -d: -f2- | tr '-' ' ')
    append disks "$vol" "$desc" VOLNAME
  done
  unset IFS
  result=$(ldialog list --title "Rename ASM volume" --status "$status" disks) || return $?
  # runcommand asm deletedisk $result
}

view_asmdel() {
  local vol desc
  local -a disks
  status="Be careful when deleting ASM volumes still in use!"

  IFS=$'\n' ; for disk in $(asm -t list | asm -t list | awk -F'\t' '{print $1":"$2"-"$3"-"$4"G"}')
  do
    vol=$(echo $disk | cut -d: -f1)
    desc=$(echo $disk | cut -d: -f2- | tr '-' ' ')
    append disks "$vol" "$desc" VOLNAME
  done
  unset IFS
  result=$(ldialog list --title "Delete ASM volume" --status "$status" disks) || return $?
  runcommand asm deletedisk $result
}

view_asmwipe() {
  local -a disks
  local dev disklist d
  status="\Z1WARNING WARNING WARNING\Zn\n"
  status+="Wiping a disk may lead to data loss! Make sure the disk you wipe has no important data on it!"

  disklist="$(asm -t disks)"

  for line in $(ls -d /sys/block/sd* )
  do
    dev=/dev/${line##*/}
    # TBD: UPDATE for detected bootdisk
    [[ "$dev" == "/dev/sda" ]] && continue
    d=$(awk -F'\t' -v DEV=$dev '$1==DEV {print $2,$4,$3}' <<< "$disklist")
    append disks  "${dev:-x}" "$d"
  done
  result=$(ldialog list --height2 6 --title "Wipe disk label" --title2 "\Z1Warning\Zn" --status "$status" disks)
  runcommand wipedisk -f $result
}
#============================================================================
# Menus
# ---------------------------------------------------------------------------
storagemenu() {
  local -a items

  [[ "$(scsi_id --whitelisted /dev/sda)" == "" ]] && SCSI=MISSING || SCSI=OK
  status="$(printf 'UUID:    %s' $SCSI)"
  append items   Disks     "Show all disks"                  view_asmdisks
  append items   Volumes   "Show ASM volumes"                view_asmlist
  append items   Available "Show available disks"            view_asmavailable
  append items   Rescan    "Rescan SCSI stack for new disks" runcommand asm rescan
  append items   Add       "Add volume"                      view_asmadd
  append items   Delete    "Delete volume"                   view_asmdel
  append items   Import    "Import ASM volumes"              runcommand asm import
  append items   Wipe      "Wipe disk label"                 view_asmwipe

  lightmenu --title "ASM Storage configuration" --cancel Quit items
  rc=$?
  case $rc in
    253) ;;
    *)   return $rc ;;
  esac
}

lightmenu storagemenu
